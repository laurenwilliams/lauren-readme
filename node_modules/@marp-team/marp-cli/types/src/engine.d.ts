import { Marpit } from '@marp-team/marpit';
export type Engine = typeof Marpit;
export type ResolvableEngine = Engine | DelayedEngineResolver | string;
declare const delayedEngineResolverSymbol: unique symbol;
type DelayedEngineResolver = {
    [delayedEngineResolverSymbol]: () => Promise<Engine>;
};
export declare class ResolvedEngine {
    klass: Engine;
    private _cachedPackage?;
    private static _defaultEngine;
    static resolve(engine: ResolvableEngine | ResolvableEngine[], from?: string): Promise<ResolvedEngine>;
    static resolveDefaultEngine(): Promise<ResolvedEngine>;
    getPackage(): Promise<Record<string, any> | null>;
    private static resolveModule;
    private constructor();
    private resolvePackage;
    private findClassPath;
}
export {};
